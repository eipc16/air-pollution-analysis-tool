server:
  port: ${SERVER_PORT:8080}
configuration:
  kafka:
    bootstrapAddress: ${KAFKA_HOST:192.168.49.2}:${KAFKA_PORT:31885}
    consumer:
      autoOffsetReset: latest
      groupId: main-data-processor-group
    topics:
      ground-measurements:
        name: ${GROUND_MEASUREMENTS_TOPIC:ground-measurements}
        partitions: ${GROUND_MEASUREMENTS_TOPIC_PARTITIONS:1}
        replicationFactor: ${GROUND_MEASUREMENTS_TOPIC_REPLICAS:1}
      satellite-measurements:
        name: ${SATELLITE_MEASUREMENTS_TOPIC:satellite-measurements}
        partitions: ${SATELLITE_MEASUREMENTS_TOPIC_PARTITIONS:1}
        replicationFactor: ${SATELLITE_MEASUREMENTS_TOPIC_REPLICAS:1}
  mongo:
    databaseName: ${MAIN_DATABASE_NAME:main-db}
    autoCreateIndices: true
    host: ${MAIN_DATABASE_HOST:192.168.49.2}
    port: ${MAIN_DATABASE_PORT:30318}
    credentials:
      username: ${MAIN_DATABASE_USER:main-user}
      password: ${MAIN_DATABASE_PASSWORD:main-user-password}
  services:
    groundDataCore:
      host: ${GROUND_DATA_CORE_HOST:localhost}
      port: ${GROUND_DATA_CORE_PORT:8084}
    satelliteDataCore:
      host: ${SATELLITE_DATA_CORE_HOST:localhost}
      port: ${SATELLITE_DATA_CORE_PORT:5000}
    calculationServiceCore:
      host: ${CALCULATION_SERVICE_CORE_HOST:localhost}
      port: ${CALCULATION_SERVICE_CORE_PORT:5001}
graphql:
  servlet:
    cors-enabled: false
    cors:
      allowed-origins: '*'
spring:
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_HOST:192.168.49.2}:${KAFKA_PORT:31885}
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer